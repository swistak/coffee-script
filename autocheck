fs = require 'fs'
tty = require 'tty'
{spawn, exec} = require 'child_process'
{extend}      = require './lib/helpers'

# ANSI Terminal Colors.
bold  = '\033[0;1m'
red   = '\033[0;31m'
green = '\033[0;32m'
reset = '\033[0m'

ok = (text) -> console.log green + text + reset
fail = (text) -> console.log red + text + reset
log = (stdout, stderr) ->

checkRuby = (file, cb) ->
  exec "ruby -v -w -c #{file}", (err, stdout, stderr) ->
    log(stdout, stderr)

    fail("#{file} - Syntax incorrect!") if err

    cb?()
 
compile = (file, cb)->
  exec "./bin/coffee -c -a rb -o documentation/rb #{file}", (err, stdout, stderr) ->
    log(stdout, stderr)

    fail("#{file} - Cannot compile") if err

    cb?()
 
compare = (file, rbFile, cb) ->
  console.log "diff -y #{file} #{rbFile}"
  exec "diff -y #{file} #{rbFile}", (err, stdout, stderr) -> 
    console.log(stdout)

  cb?()

dir = process.argv[2]
showFile = process.argv[3]

files = fs.readdirSync dir
files = (dir + file for file in files when file.match(/\.coffee$/))

check = (file) ->
  rbFile = file.replace(/coffee/g, 'rb')
  compile file, -> 
    checkRuby rbFile, -> 
      ok("#{file} Compiled, and syntax correct")
      compare(file, rbFile) if showFile && file.indexOf(showFile) != -1
      

checkAll = () ->
  files.forEach (file) -> check(file)

# Watch all files for changes
files.forEach (file) ->
  fs.watchFile file, {persistent: true, interval: 500}, (curr, prev) -> 
    return if curr.size is prev.size and curr.mtime.getTime() is prev.mtime.getTime()
    check(file)

# If nodes.rb.js changes - the nwe need to recheck all files!
fs.watchFile 'lib/nodes.rb.js', {persistent: true, interval: 500}, (curr, prev) ->
  return if curr.size is prev.size and curr.mtime.getTime() is prev.mtime.getTime()
  checkAll()

checkAll()
